//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Z:/DotNetOrb/src/idlcompiler/IDL.Grammar/IDLPreprocessorLexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace DotNetOrb.IdlCompiler {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class IDLPreprocessorLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		SHARP=1, CODE=2, IMPORT=3, INCLUDE=4, PRAGMA=5, PREFIX=6, DEFINE=7, DEFINED=8, 
		IF=9, ELIF=10, ELSE=11, UNDEF=12, IFDEF=13, IFNDEF=14, ENDIF=15, TRUE=16, 
		FALSE=17, ERROR=18, BANG=19, LPAREN=20, RPAREN=21, EQUAL=22, NOTEQUAL=23, 
		AND=24, OR=25, LT=26, GT=27, LE=28, GE=29, DIRECTIVE_WHITESPACES=30, DIRECTIVE_STRING=31, 
		CONDITIONAL_SYMBOL=32, DECIMAL_LITERAL=33, FLOAT=34, NEW_LINE=35, DIRECTIVE_COMMENT=36, 
		DIRECTIVE_LINE_COMMENT=37, DIRECITVE_NEW_LINE=38, DIRECTIVE_TEXT_NEW_LINE=39, 
		TEXT=40, SLASH=41, SEMICOLON=42;
	public const int
		COMMENTS_CHANNEL=2;
	public const int
		DIRECTIVE_MODE=1, DIRECTIVE_DEFINE=2, DIRECTIVE_TEXT=3;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "COMMENTS_CHANNEL"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "DIRECTIVE_MODE", "DIRECTIVE_DEFINE", "DIRECTIVE_TEXT"
	};

	public static readonly string[] ruleNames = {
		"SHARP", "COMMENT", "LINE_COMMENT", "SLASH", "CHARACTER_LITERAL", "QUOTE_STRING", 
		"STRING", "CODE", "IMPORT", "INCLUDE", "PRAGMA", "PREFIX", "DEFINE", "DEFINED", 
		"IF", "ELIF", "ELSE", "UNDEF", "IFDEF", "IFNDEF", "ENDIF", "TRUE", "FALSE", 
		"ERROR", "BANG", "LPAREN", "RPAREN", "EQUAL", "NOTEQUAL", "AND", "OR", 
		"LT", "GT", "LE", "GE", "DIRECTIVE_WHITESPACES", "DIRECTIVE_STRING", "CONDITIONAL_SYMBOL", 
		"DECIMAL_LITERAL", "FLOAT", "NEW_LINE", "DIRECTIVE_COMMENT", "DIRECTIVE_LINE_COMMENT", 
		"DIRECITVE_NEW_LINE", "DIRECTIVE_DEFINE_CONDITIONAL_SYMBOL", "DIRECTIVE_TEXT_NEW_LINE", 
		"BACK_SLASH_ESCAPE", "TEXT_NEW_LINE", "TEXT_COMMENT", "TEXT_LINE_COMMENT", 
		"TEXT_SLASH", "SEMICOLON", "TEXT", "EscapeSequence", "OctalEscape", "UnicodeEscape", 
		"HexDigit", "StringFragment", "LETTER", "A", "B", "C", "D", "E", "F", 
		"G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", 
		"U", "V", "W", "X", "Y", "Z"
	};


	public IDLPreprocessorLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public IDLPreprocessorLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'#'", null, null, null, "'pragma'", "'prefix'", null, "'defined'", 
		"'if'", "'elif'", "'else'", "'undef'", "'ifdef'", "'ifndef'", "'endif'", 
		null, null, "'error'", "'!'", "'('", "')'", "'=='", "'!='", "'&&'", "'||'", 
		"'<'", "'>'", "'<='", "'>='", null, null, null, null, null, null, null, 
		null, null, null, null, null, "';'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "SHARP", "CODE", "IMPORT", "INCLUDE", "PRAGMA", "PREFIX", "DEFINE", 
		"DEFINED", "IF", "ELIF", "ELSE", "UNDEF", "IFDEF", "IFNDEF", "ENDIF", 
		"TRUE", "FALSE", "ERROR", "BANG", "LPAREN", "RPAREN", "EQUAL", "NOTEQUAL", 
		"AND", "OR", "LT", "GT", "LE", "GE", "DIRECTIVE_WHITESPACES", "DIRECTIVE_STRING", 
		"CONDITIONAL_SYMBOL", "DECIMAL_LITERAL", "FLOAT", "NEW_LINE", "DIRECTIVE_COMMENT", 
		"DIRECTIVE_LINE_COMMENT", "DIRECITVE_NEW_LINE", "DIRECTIVE_TEXT_NEW_LINE", 
		"TEXT", "SLASH", "SEMICOLON"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "IDLPreprocessorLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static IDLPreprocessorLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,42,652,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,
		2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
		2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
		2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,
		2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,
		2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,
		2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,
		2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,
		2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,
		2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,
		2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,
		2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,
		2,83,7,83,2,84,7,84,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,5,1,183,8,1,10,1,12,
		1,186,9,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,5,2,197,8,2,10,2,12,2,200,
		9,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,3,4,211,8,4,1,4,1,4,1,4,1,4,1,
		5,1,5,1,5,5,5,220,8,5,10,5,12,5,223,9,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,
		6,1,7,4,7,234,8,7,11,7,12,7,235,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,4,8,246,
		8,8,11,8,12,8,247,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,4,9,261,
		8,9,11,9,12,9,262,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
		1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
		1,12,4,12,291,8,12,11,12,12,12,292,1,12,1,12,1,13,1,13,1,13,1,13,1,13,
		1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,
		1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,
		1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
		1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,
		1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,
		1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,32,1,32,
		1,33,1,33,1,33,1,34,1,34,1,34,1,35,4,35,393,8,35,11,35,12,35,394,1,35,
		1,35,1,36,1,36,1,37,1,37,1,37,5,37,404,8,37,10,37,12,37,407,9,37,1,38,
		4,38,410,8,38,11,38,12,38,411,1,39,4,39,415,8,39,11,39,12,39,416,1,39,
		1,39,5,39,421,8,39,10,39,12,39,424,9,39,1,39,1,39,4,39,428,8,39,11,39,
		12,39,429,3,39,432,8,39,1,40,3,40,435,8,40,1,40,1,40,1,40,1,40,1,41,1,
		41,1,41,1,41,5,41,445,8,41,10,41,12,41,448,9,41,1,41,1,41,1,41,1,41,1,
		41,1,42,1,42,1,42,1,42,5,42,459,8,42,10,42,12,42,462,9,42,1,42,1,42,1,
		43,1,43,3,43,468,8,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,5,44,477,8,44,
		10,44,12,44,480,9,44,1,44,1,44,1,44,5,44,485,8,44,10,44,12,44,488,9,44,
		1,44,3,44,491,8,44,1,44,1,44,1,44,1,45,1,45,3,45,498,8,45,1,45,1,45,1,
		45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,3,47,510,8,47,1,47,1,47,1,47,1,47,
		1,47,1,48,1,48,1,48,1,48,5,48,521,8,48,10,48,12,48,524,9,48,1,48,1,48,
		1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,5,49,536,8,49,10,49,12,49,539,
		9,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,52,4,52,
		553,8,52,11,52,12,52,554,1,53,1,53,1,53,1,53,3,53,561,8,53,1,54,1,54,1,
		54,1,54,1,54,1,54,1,54,1,54,1,54,3,54,572,8,54,1,55,1,55,1,55,1,55,1,55,
		1,55,1,55,1,56,1,56,1,57,1,57,1,57,1,57,5,57,587,8,57,10,57,12,57,590,
		9,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,3,58,599,8,58,1,59,1,59,1,60,1,
		60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,
		67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,74,1,
		74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,81,1,
		81,1,82,1,82,1,83,1,83,1,84,1,84,3,184,446,522,0,85,4,1,6,0,8,0,10,41,
		12,0,14,0,16,0,18,2,20,3,22,4,24,5,26,6,28,7,30,8,32,9,34,10,36,11,38,
		12,40,13,42,14,44,15,46,16,48,17,50,18,52,19,54,20,56,21,58,22,60,23,62,
		24,64,25,66,26,68,27,70,28,72,29,74,30,76,31,78,32,80,33,82,34,84,35,86,
		36,88,37,90,38,92,0,94,39,96,0,98,0,100,0,102,0,104,0,106,42,108,40,110,
		0,112,0,114,0,116,0,118,0,120,0,122,0,124,0,126,0,128,0,130,0,132,0,134,
		0,136,0,138,0,140,0,142,0,144,0,146,0,148,0,150,0,152,0,154,0,156,0,158,
		0,160,0,162,0,164,0,166,0,168,0,170,0,172,0,4,0,1,2,3,43,2,0,10,10,13,
		13,2,0,39,39,92,92,3,0,34,35,39,39,47,47,2,0,9,9,32,32,1,0,48,57,5,0,9,
		9,32,32,44,44,46,46,48,57,4,0,10,10,13,13,47,47,92,92,8,0,34,34,39,39,
		92,92,98,98,102,102,110,110,114,114,116,116,1,0,48,51,1,0,48,55,3,0,48,
		57,65,70,97,102,2,0,34,34,92,92,4,0,36,36,65,90,95,95,97,122,2,0,0,255,
		55296,56319,1,0,55296,56319,1,0,56320,57343,1,0,233,233,2,0,65,65,97,97,
		2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,69,101,101,2,
		0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,105,
		2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,77,109,109,
		2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,113,
		2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,
		2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,121,
		2,0,90,90,122,122,656,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,
		0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,1,20,1,0,0,0,1,22,
		1,0,0,0,1,24,1,0,0,0,1,26,1,0,0,0,1,28,1,0,0,0,1,30,1,0,0,0,1,32,1,0,0,
		0,1,34,1,0,0,0,1,36,1,0,0,0,1,38,1,0,0,0,1,40,1,0,0,0,1,42,1,0,0,0,1,44,
		1,0,0,0,1,46,1,0,0,0,1,48,1,0,0,0,1,50,1,0,0,0,1,52,1,0,0,0,1,54,1,0,0,
		0,1,56,1,0,0,0,1,58,1,0,0,0,1,60,1,0,0,0,1,62,1,0,0,0,1,64,1,0,0,0,1,66,
		1,0,0,0,1,68,1,0,0,0,1,70,1,0,0,0,1,72,1,0,0,0,1,74,1,0,0,0,1,76,1,0,0,
		0,1,78,1,0,0,0,1,80,1,0,0,0,1,82,1,0,0,0,1,84,1,0,0,0,1,86,1,0,0,0,1,88,
		1,0,0,0,1,90,1,0,0,0,2,92,1,0,0,0,3,94,1,0,0,0,3,96,1,0,0,0,3,98,1,0,0,
		0,3,100,1,0,0,0,3,102,1,0,0,0,3,104,1,0,0,0,3,106,1,0,0,0,3,108,1,0,0,
		0,4,174,1,0,0,0,6,178,1,0,0,0,8,192,1,0,0,0,10,203,1,0,0,0,12,207,1,0,
		0,0,14,216,1,0,0,0,16,228,1,0,0,0,18,233,1,0,0,0,20,237,1,0,0,0,22,251,
		1,0,0,0,24,266,1,0,0,0,26,275,1,0,0,0,28,282,1,0,0,0,30,296,1,0,0,0,32,
		304,1,0,0,0,34,307,1,0,0,0,36,312,1,0,0,0,38,317,1,0,0,0,40,323,1,0,0,
		0,42,329,1,0,0,0,44,336,1,0,0,0,46,344,1,0,0,0,48,349,1,0,0,0,50,355,1,
		0,0,0,52,363,1,0,0,0,54,365,1,0,0,0,56,367,1,0,0,0,58,369,1,0,0,0,60,372,
		1,0,0,0,62,375,1,0,0,0,64,378,1,0,0,0,66,381,1,0,0,0,68,383,1,0,0,0,70,
		385,1,0,0,0,72,388,1,0,0,0,74,392,1,0,0,0,76,398,1,0,0,0,78,400,1,0,0,
		0,80,409,1,0,0,0,82,431,1,0,0,0,84,434,1,0,0,0,86,440,1,0,0,0,88,454,1,
		0,0,0,90,465,1,0,0,0,92,473,1,0,0,0,94,495,1,0,0,0,96,503,1,0,0,0,98,509,
		1,0,0,0,100,516,1,0,0,0,102,531,1,0,0,0,104,543,1,0,0,0,106,547,1,0,0,
		0,108,552,1,0,0,0,110,560,1,0,0,0,112,571,1,0,0,0,114,573,1,0,0,0,116,
		580,1,0,0,0,118,582,1,0,0,0,120,598,1,0,0,0,122,600,1,0,0,0,124,602,1,
		0,0,0,126,604,1,0,0,0,128,606,1,0,0,0,130,608,1,0,0,0,132,610,1,0,0,0,
		134,612,1,0,0,0,136,614,1,0,0,0,138,616,1,0,0,0,140,618,1,0,0,0,142,620,
		1,0,0,0,144,622,1,0,0,0,146,624,1,0,0,0,148,626,1,0,0,0,150,628,1,0,0,
		0,152,630,1,0,0,0,154,632,1,0,0,0,156,634,1,0,0,0,158,636,1,0,0,0,160,
		638,1,0,0,0,162,640,1,0,0,0,164,642,1,0,0,0,166,644,1,0,0,0,168,646,1,
		0,0,0,170,648,1,0,0,0,172,650,1,0,0,0,174,175,5,35,0,0,175,176,1,0,0,0,
		176,177,6,0,0,0,177,5,1,0,0,0,178,179,5,47,0,0,179,180,5,42,0,0,180,184,
		1,0,0,0,181,183,9,0,0,0,182,181,1,0,0,0,183,186,1,0,0,0,184,185,1,0,0,
		0,184,182,1,0,0,0,185,187,1,0,0,0,186,184,1,0,0,0,187,188,5,42,0,0,188,
		189,5,47,0,0,189,190,1,0,0,0,190,191,6,1,1,0,191,7,1,0,0,0,192,193,5,47,
		0,0,193,194,5,47,0,0,194,198,1,0,0,0,195,197,8,0,0,0,196,195,1,0,0,0,197,
		200,1,0,0,0,198,196,1,0,0,0,198,199,1,0,0,0,199,201,1,0,0,0,200,198,1,
		0,0,0,201,202,6,2,1,0,202,9,1,0,0,0,203,204,5,47,0,0,204,205,1,0,0,0,205,
		206,6,3,1,0,206,11,1,0,0,0,207,210,5,39,0,0,208,211,3,110,53,0,209,211,
		8,1,0,0,210,208,1,0,0,0,210,209,1,0,0,0,211,212,1,0,0,0,212,213,5,39,0,
		0,213,214,1,0,0,0,214,215,6,4,1,0,215,13,1,0,0,0,216,221,5,39,0,0,217,
		220,3,110,53,0,218,220,8,1,0,0,219,217,1,0,0,0,219,218,1,0,0,0,220,223,
		1,0,0,0,221,219,1,0,0,0,221,222,1,0,0,0,222,224,1,0,0,0,223,221,1,0,0,
		0,224,225,5,39,0,0,225,226,1,0,0,0,226,227,6,5,1,0,227,15,1,0,0,0,228,
		229,3,118,57,0,229,230,1,0,0,0,230,231,6,6,1,0,231,17,1,0,0,0,232,234,
		8,2,0,0,233,232,1,0,0,0,234,235,1,0,0,0,235,233,1,0,0,0,235,236,1,0,0,
		0,236,19,1,0,0,0,237,238,5,105,0,0,238,239,5,109,0,0,239,240,5,112,0,0,
		240,241,5,111,0,0,241,242,5,114,0,0,242,243,5,116,0,0,243,245,1,0,0,0,
		244,246,7,3,0,0,245,244,1,0,0,0,246,247,1,0,0,0,247,245,1,0,0,0,247,248,
		1,0,0,0,248,249,1,0,0,0,249,250,6,8,2,0,250,21,1,0,0,0,251,252,5,105,0,
		0,252,253,5,110,0,0,253,254,5,99,0,0,254,255,5,108,0,0,255,256,5,117,0,
		0,256,257,5,100,0,0,257,258,5,101,0,0,258,260,1,0,0,0,259,261,7,3,0,0,
		260,259,1,0,0,0,261,262,1,0,0,0,262,260,1,0,0,0,262,263,1,0,0,0,263,264,
		1,0,0,0,264,265,6,9,2,0,265,23,1,0,0,0,266,267,5,112,0,0,267,268,5,114,
		0,0,268,269,5,97,0,0,269,270,5,103,0,0,270,271,5,109,0,0,271,272,5,97,
		0,0,272,273,1,0,0,0,273,274,6,10,2,0,274,25,1,0,0,0,275,276,5,112,0,0,
		276,277,5,114,0,0,277,278,5,101,0,0,278,279,5,102,0,0,279,280,5,105,0,
		0,280,281,5,120,0,0,281,27,1,0,0,0,282,283,5,100,0,0,283,284,5,101,0,0,
		284,285,5,102,0,0,285,286,5,105,0,0,286,287,5,110,0,0,287,288,5,101,0,
		0,288,290,1,0,0,0,289,291,7,3,0,0,290,289,1,0,0,0,291,292,1,0,0,0,292,
		290,1,0,0,0,292,293,1,0,0,0,293,294,1,0,0,0,294,295,6,12,3,0,295,29,1,
		0,0,0,296,297,5,100,0,0,297,298,5,101,0,0,298,299,5,102,0,0,299,300,5,
		105,0,0,300,301,5,110,0,0,301,302,5,101,0,0,302,303,5,100,0,0,303,31,1,
		0,0,0,304,305,5,105,0,0,305,306,5,102,0,0,306,33,1,0,0,0,307,308,5,101,
		0,0,308,309,5,108,0,0,309,310,5,105,0,0,310,311,5,102,0,0,311,35,1,0,0,
		0,312,313,5,101,0,0,313,314,5,108,0,0,314,315,5,115,0,0,315,316,5,101,
		0,0,316,37,1,0,0,0,317,318,5,117,0,0,318,319,5,110,0,0,319,320,5,100,0,
		0,320,321,5,101,0,0,321,322,5,102,0,0,322,39,1,0,0,0,323,324,5,105,0,0,
		324,325,5,102,0,0,325,326,5,100,0,0,326,327,5,101,0,0,327,328,5,102,0,
		0,328,41,1,0,0,0,329,330,5,105,0,0,330,331,5,102,0,0,331,332,5,110,0,0,
		332,333,5,100,0,0,333,334,5,101,0,0,334,335,5,102,0,0,335,43,1,0,0,0,336,
		337,5,101,0,0,337,338,5,110,0,0,338,339,5,100,0,0,339,340,5,105,0,0,340,
		341,5,102,0,0,341,342,1,0,0,0,342,343,6,20,2,0,343,45,1,0,0,0,344,345,
		3,160,78,0,345,346,3,156,76,0,346,347,3,162,79,0,347,348,3,130,63,0,348,
		47,1,0,0,0,349,350,3,132,64,0,350,351,3,122,59,0,351,352,3,144,70,0,352,
		353,3,158,77,0,353,354,3,130,63,0,354,49,1,0,0,0,355,356,5,101,0,0,356,
		357,5,114,0,0,357,358,5,114,0,0,358,359,5,111,0,0,359,360,5,114,0,0,360,
		361,1,0,0,0,361,362,6,23,2,0,362,51,1,0,0,0,363,364,5,33,0,0,364,53,1,
		0,0,0,365,366,5,40,0,0,366,55,1,0,0,0,367,368,5,41,0,0,368,57,1,0,0,0,
		369,370,5,61,0,0,370,371,5,61,0,0,371,59,1,0,0,0,372,373,5,33,0,0,373,
		374,5,61,0,0,374,61,1,0,0,0,375,376,5,38,0,0,376,377,5,38,0,0,377,63,1,
		0,0,0,378,379,5,124,0,0,379,380,5,124,0,0,380,65,1,0,0,0,381,382,5,60,
		0,0,382,67,1,0,0,0,383,384,5,62,0,0,384,69,1,0,0,0,385,386,5,60,0,0,386,
		387,5,61,0,0,387,71,1,0,0,0,388,389,5,62,0,0,389,390,5,61,0,0,390,73,1,
		0,0,0,391,393,7,3,0,0,392,391,1,0,0,0,393,394,1,0,0,0,394,392,1,0,0,0,
		394,395,1,0,0,0,395,396,1,0,0,0,396,397,6,35,4,0,397,75,1,0,0,0,398,399,
		3,118,57,0,399,77,1,0,0,0,400,405,3,120,58,0,401,404,3,120,58,0,402,404,
		7,4,0,0,403,401,1,0,0,0,403,402,1,0,0,0,404,407,1,0,0,0,405,403,1,0,0,
		0,405,406,1,0,0,0,406,79,1,0,0,0,407,405,1,0,0,0,408,410,7,4,0,0,409,408,
		1,0,0,0,410,411,1,0,0,0,411,409,1,0,0,0,411,412,1,0,0,0,412,81,1,0,0,0,
		413,415,7,4,0,0,414,413,1,0,0,0,415,416,1,0,0,0,416,414,1,0,0,0,416,417,
		1,0,0,0,417,418,1,0,0,0,418,422,5,46,0,0,419,421,7,4,0,0,420,419,1,0,0,
		0,421,424,1,0,0,0,422,420,1,0,0,0,422,423,1,0,0,0,423,432,1,0,0,0,424,
		422,1,0,0,0,425,427,5,46,0,0,426,428,7,4,0,0,427,426,1,0,0,0,428,429,1,
		0,0,0,429,427,1,0,0,0,429,430,1,0,0,0,430,432,1,0,0,0,431,414,1,0,0,0,
		431,425,1,0,0,0,432,83,1,0,0,0,433,435,5,13,0,0,434,433,1,0,0,0,434,435,
		1,0,0,0,435,436,1,0,0,0,436,437,5,10,0,0,437,438,1,0,0,0,438,439,6,40,
		5,0,439,85,1,0,0,0,440,441,5,47,0,0,441,442,5,42,0,0,442,446,1,0,0,0,443,
		445,9,0,0,0,444,443,1,0,0,0,445,448,1,0,0,0,446,447,1,0,0,0,446,444,1,
		0,0,0,447,449,1,0,0,0,448,446,1,0,0,0,449,450,5,42,0,0,450,451,5,47,0,
		0,451,452,1,0,0,0,452,453,6,41,6,0,453,87,1,0,0,0,454,455,5,47,0,0,455,
		456,5,47,0,0,456,460,1,0,0,0,457,459,8,0,0,0,458,457,1,0,0,0,459,462,1,
		0,0,0,460,458,1,0,0,0,460,461,1,0,0,0,461,463,1,0,0,0,462,460,1,0,0,0,
		463,464,6,42,6,0,464,89,1,0,0,0,465,467,5,92,0,0,466,468,5,13,0,0,467,
		466,1,0,0,0,467,468,1,0,0,0,468,469,1,0,0,0,469,470,5,10,0,0,470,471,1,
		0,0,0,471,472,6,43,4,0,472,91,1,0,0,0,473,478,3,120,58,0,474,477,3,120,
		58,0,475,477,7,4,0,0,476,474,1,0,0,0,476,475,1,0,0,0,477,480,1,0,0,0,478,
		476,1,0,0,0,478,479,1,0,0,0,479,490,1,0,0,0,480,478,1,0,0,0,481,486,5,
		40,0,0,482,485,3,120,58,0,483,485,7,5,0,0,484,482,1,0,0,0,484,483,1,0,
		0,0,485,488,1,0,0,0,486,484,1,0,0,0,486,487,1,0,0,0,487,489,1,0,0,0,488,
		486,1,0,0,0,489,491,5,41,0,0,490,481,1,0,0,0,490,491,1,0,0,0,491,492,1,
		0,0,0,492,493,6,44,7,0,493,494,6,44,2,0,494,93,1,0,0,0,495,497,5,92,0,
		0,496,498,5,13,0,0,497,496,1,0,0,0,497,498,1,0,0,0,498,499,1,0,0,0,499,
		500,5,10,0,0,500,501,1,0,0,0,501,502,6,45,4,0,502,95,1,0,0,0,503,504,5,
		92,0,0,504,505,9,0,0,0,505,506,1,0,0,0,506,507,6,46,8,0,507,97,1,0,0,0,
		508,510,5,13,0,0,509,508,1,0,0,0,509,510,1,0,0,0,510,511,1,0,0,0,511,512,
		5,10,0,0,512,513,1,0,0,0,513,514,6,47,9,0,514,515,6,47,5,0,515,99,1,0,
		0,0,516,517,5,47,0,0,517,518,5,42,0,0,518,522,1,0,0,0,519,521,9,0,0,0,
		520,519,1,0,0,0,521,524,1,0,0,0,522,523,1,0,0,0,522,520,1,0,0,0,523,525,
		1,0,0,0,524,522,1,0,0,0,525,526,5,42,0,0,526,527,5,47,0,0,527,528,1,0,
		0,0,528,529,6,48,6,0,529,530,6,48,10,0,530,101,1,0,0,0,531,532,5,47,0,
		0,532,533,5,47,0,0,533,537,1,0,0,0,534,536,8,0,0,0,535,534,1,0,0,0,536,
		539,1,0,0,0,537,535,1,0,0,0,537,538,1,0,0,0,538,540,1,0,0,0,539,537,1,
		0,0,0,540,541,6,49,6,0,541,542,6,49,11,0,542,103,1,0,0,0,543,544,5,47,
		0,0,544,545,1,0,0,0,545,546,6,50,8,0,546,105,1,0,0,0,547,548,5,59,0,0,
		548,549,1,0,0,0,549,550,6,51,8,0,550,107,1,0,0,0,551,553,8,6,0,0,552,551,
		1,0,0,0,553,554,1,0,0,0,554,552,1,0,0,0,554,555,1,0,0,0,555,109,1,0,0,
		0,556,557,5,92,0,0,557,561,7,7,0,0,558,561,3,112,54,0,559,561,3,114,55,
		0,560,556,1,0,0,0,560,558,1,0,0,0,560,559,1,0,0,0,561,111,1,0,0,0,562,
		563,5,92,0,0,563,564,7,8,0,0,564,565,7,9,0,0,565,572,7,9,0,0,566,567,5,
		92,0,0,567,568,7,9,0,0,568,572,7,9,0,0,569,570,5,92,0,0,570,572,7,9,0,
		0,571,562,1,0,0,0,571,566,1,0,0,0,571,569,1,0,0,0,572,113,1,0,0,0,573,
		574,5,92,0,0,574,575,5,117,0,0,575,576,3,116,56,0,576,577,3,116,56,0,577,
		578,3,116,56,0,578,579,3,116,56,0,579,115,1,0,0,0,580,581,7,10,0,0,581,
		117,1,0,0,0,582,588,5,34,0,0,583,587,8,11,0,0,584,585,5,92,0,0,585,587,
		9,0,0,0,586,583,1,0,0,0,586,584,1,0,0,0,587,590,1,0,0,0,588,586,1,0,0,
		0,588,589,1,0,0,0,589,591,1,0,0,0,590,588,1,0,0,0,591,592,5,34,0,0,592,
		119,1,0,0,0,593,599,7,12,0,0,594,599,8,13,0,0,595,596,7,14,0,0,596,599,
		7,15,0,0,597,599,7,16,0,0,598,593,1,0,0,0,598,594,1,0,0,0,598,595,1,0,
		0,0,598,597,1,0,0,0,599,121,1,0,0,0,600,601,7,17,0,0,601,123,1,0,0,0,602,
		603,7,18,0,0,603,125,1,0,0,0,604,605,7,19,0,0,605,127,1,0,0,0,606,607,
		7,20,0,0,607,129,1,0,0,0,608,609,7,21,0,0,609,131,1,0,0,0,610,611,7,22,
		0,0,611,133,1,0,0,0,612,613,7,23,0,0,613,135,1,0,0,0,614,615,7,24,0,0,
		615,137,1,0,0,0,616,617,7,25,0,0,617,139,1,0,0,0,618,619,7,26,0,0,619,
		141,1,0,0,0,620,621,7,27,0,0,621,143,1,0,0,0,622,623,7,28,0,0,623,145,
		1,0,0,0,624,625,7,29,0,0,625,147,1,0,0,0,626,627,7,30,0,0,627,149,1,0,
		0,0,628,629,7,31,0,0,629,151,1,0,0,0,630,631,7,32,0,0,631,153,1,0,0,0,
		632,633,7,33,0,0,633,155,1,0,0,0,634,635,7,34,0,0,635,157,1,0,0,0,636,
		637,7,35,0,0,637,159,1,0,0,0,638,639,7,36,0,0,639,161,1,0,0,0,640,641,
		7,37,0,0,641,163,1,0,0,0,642,643,7,38,0,0,643,165,1,0,0,0,644,645,7,39,
		0,0,645,167,1,0,0,0,646,647,7,40,0,0,647,169,1,0,0,0,648,649,7,41,0,0,
		649,171,1,0,0,0,650,651,7,42,0,0,651,173,1,0,0,0,40,0,1,2,3,184,198,210,
		219,221,235,247,262,292,394,403,405,411,416,422,429,431,434,446,460,467,
		476,478,484,486,490,497,509,522,537,554,560,571,586,588,598,12,2,1,0,7,
		2,0,2,3,0,2,2,0,0,1,0,2,0,0,0,2,0,7,32,0,7,40,0,7,35,0,7,36,0,7,37,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace DotNetOrb.IdlCompiler
