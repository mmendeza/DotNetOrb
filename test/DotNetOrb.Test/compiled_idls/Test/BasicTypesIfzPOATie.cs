/**
 * Generated by DotNetORb.IdlCompiler V 1.0.8.0
 * Timestamp: 27/08/2025 6:53:30
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace Test
{

	public class BasicTypesIfzPOATie: BasicTypesIfzPOA
	{
		public IBasicTypesIfzOperations _OperationsDelegate { get; set; }
		private PortableServer.IPOA _poa;

		public BasicTypesIfzPOATie(IBasicTypesIfzOperations d)
		{
			_OperationsDelegate = d;
		}

		public BasicTypesIfzPOATie(IBasicTypesIfzOperations d, PortableServer.POA poa)
		{
			_OperationsDelegate = d;
			_poa = poa;
		}

		public override PortableServer.IPOA _DefaultPOA()
		{
			if (_poa != null)
			{
				return _poa;
			}
			return base._DefaultPOA();
		}

		public override Test.IBasicTypesIfz _This()
		{
			return Test.BasicTypesIfzHelper.Narrow(_ThisObject());
		}

		public override Test.IBasicTypesIfz _This(CORBA.ORB orb)
		{
			return Test.BasicTypesIfzHelper.Narrow(_ThisObject(orb));
		}

		public override sbyte ASbyte 
		{
			get
			{
				return _OperationsDelegate.ASbyte;
			}

			set
			{
				_OperationsDelegate.ASbyte = value;
			}
		}
		public override sbyte[] ASbyteSeq 
		{
			get
			{
				return _OperationsDelegate.ASbyteSeq;
			}

			set
			{
				_OperationsDelegate.ASbyteSeq = value;
			}
		}
		public override byte AByte 
		{
			get
			{
				return _OperationsDelegate.AByte;
			}

			set
			{
				_OperationsDelegate.AByte = value;
			}
		}
		public override byte[] AByteSeq 
		{
			get
			{
				return _OperationsDelegate.AByteSeq;
			}

			set
			{
				_OperationsDelegate.AByteSeq = value;
			}
		}
		public override short AShort 
		{
			get
			{
				return _OperationsDelegate.AShort;
			}

			set
			{
				_OperationsDelegate.AShort = value;
			}
		}
		public override short[] AShortSeq 
		{
			get
			{
				return _OperationsDelegate.AShortSeq;
			}

			set
			{
				_OperationsDelegate.AShortSeq = value;
			}
		}
		public override ushort AUshort 
		{
			get
			{
				return _OperationsDelegate.AUshort;
			}

			set
			{
				_OperationsDelegate.AUshort = value;
			}
		}
		public override ushort[] AUshortSeq 
		{
			get
			{
				return _OperationsDelegate.AUshortSeq;
			}

			set
			{
				_OperationsDelegate.AUshortSeq = value;
			}
		}
		public override int ALong 
		{
			get
			{
				return _OperationsDelegate.ALong;
			}

			set
			{
				_OperationsDelegate.ALong = value;
			}
		}
		public override int[] ALongSeq 
		{
			get
			{
				return _OperationsDelegate.ALongSeq;
			}

			set
			{
				_OperationsDelegate.ALongSeq = value;
			}
		}
		public override uint AUlong 
		{
			get
			{
				return _OperationsDelegate.AUlong;
			}

			set
			{
				_OperationsDelegate.AUlong = value;
			}
		}
		public override uint[] AUlongSeq 
		{
			get
			{
				return _OperationsDelegate.AUlongSeq;
			}

			set
			{
				_OperationsDelegate.AUlongSeq = value;
			}
		}
		public override long ALongLong 
		{
			get
			{
				return _OperationsDelegate.ALongLong;
			}

			set
			{
				_OperationsDelegate.ALongLong = value;
			}
		}
		public override long[] ALongLongSeq 
		{
			get
			{
				return _OperationsDelegate.ALongLongSeq;
			}

			set
			{
				_OperationsDelegate.ALongLongSeq = value;
			}
		}
		public override ulong AUlongLong 
		{
			get
			{
				return _OperationsDelegate.AUlongLong;
			}

			set
			{
				_OperationsDelegate.AUlongLong = value;
			}
		}
		public override ulong[] AUlongLongSeq 
		{
			get
			{
				return _OperationsDelegate.AUlongLongSeq;
			}

			set
			{
				_OperationsDelegate.AUlongLongSeq = value;
			}
		}
		public override float AFloat 
		{
			get
			{
				return _OperationsDelegate.AFloat;
			}

			set
			{
				_OperationsDelegate.AFloat = value;
			}
		}
		public override float[] AFloatSeq 
		{
			get
			{
				return _OperationsDelegate.AFloatSeq;
			}

			set
			{
				_OperationsDelegate.AFloatSeq = value;
			}
		}
		public override double ADouble 
		{
			get
			{
				return _OperationsDelegate.ADouble;
			}

			set
			{
				_OperationsDelegate.ADouble = value;
			}
		}
		public override double[] ADoubleSeq 
		{
			get
			{
				return _OperationsDelegate.ADoubleSeq;
			}

			set
			{
				_OperationsDelegate.ADoubleSeq = value;
			}
		}
		public override char AChar 
		{
			get
			{
				return _OperationsDelegate.AChar;
			}

			set
			{
				_OperationsDelegate.AChar = value;
			}
		}
		public override char[] ACharSeq 
		{
			get
			{
				return _OperationsDelegate.ACharSeq;
			}

			set
			{
				_OperationsDelegate.ACharSeq = value;
			}
		}
		public override char AWchar 
		{
			get
			{
				return _OperationsDelegate.AWchar;
			}

			set
			{
				_OperationsDelegate.AWchar = value;
			}
		}
		public override char[] AWcharSeq 
		{
			get
			{
				return _OperationsDelegate.AWcharSeq;
			}

			set
			{
				_OperationsDelegate.AWcharSeq = value;
			}
		}
		[WideChar(false)]
		public override string AString 
		{
			get
			{
				return _OperationsDelegate.AString;
			}

			set
			{
				_OperationsDelegate.AString = value;
			}
		}
		public override string[] AStringSeq 
		{
			get
			{
				return _OperationsDelegate.AStringSeq;
			}

			set
			{
				_OperationsDelegate.AStringSeq = value;
			}
		}
		[WideChar(true)]
		public override string AWstring 
		{
			get
			{
				return _OperationsDelegate.AWstring;
			}

			set
			{
				_OperationsDelegate.AWstring = value;
			}
		}
		public override string[] AWstringSeq 
		{
			get
			{
				return _OperationsDelegate.AWstringSeq;
			}

			set
			{
				_OperationsDelegate.AWstringSeq = value;
			}
		}
		public override bool ABoolean 
		{
			get
			{
				return _OperationsDelegate.ABoolean;
			}

			set
			{
				_OperationsDelegate.ABoolean = value;
			}
		}
		public override bool[] ABooleanSeq 
		{
			get
			{
				return _OperationsDelegate.ABooleanSeq;
			}

			set
			{
				_OperationsDelegate.ABooleanSeq = value;
			}
		}
		public override byte AOctet 
		{
			get
			{
				return _OperationsDelegate.AOctet;
			}

			set
			{
				_OperationsDelegate.AOctet = value;
			}
		}
		public override byte[] AOctetSeq 
		{
			get
			{
				return _OperationsDelegate.AOctetSeq;
			}

			set
			{
				_OperationsDelegate.AOctetSeq = value;
			}
		}
		public override Decimal AFixed 
		{
			get
			{
				return _OperationsDelegate.AFixed;
			}

			set
			{
				_OperationsDelegate.AFixed = value;
			}
		}
		public override Decimal[] AFixedSeq 
		{
			get
			{
				return _OperationsDelegate.AFixedSeq;
			}

			set
			{
				_OperationsDelegate.AFixedSeq = value;
			}
		}
	}
}
